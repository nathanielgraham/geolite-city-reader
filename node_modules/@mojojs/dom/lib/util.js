const XML_UNESCAPE = {
    amp: '&',
    lt: '<',
    gt: '>',
    quot: '"',
    apos: "'",
    '#39': "'"
};
export function cssUnescape(value) {
    return value.replaceAll('\\n', '').replace(/\\([0-9a-fA-F]{1,6})\s?/g, cssUnescapeReplace);
}
function cssUnescapeReplace(value) {
    return String.fromCharCode(parseInt(value.replaceAll('\\', ''), 16));
}
export function escapeRegExp(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
}
export function stickyMatch(stringWithOffset, stickyRegex) {
    stickyRegex.lastIndex = stringWithOffset.offset;
    const match = stickyRegex.exec(stringWithOffset.value);
    if (match !== null)
        stringWithOffset.offset = stickyRegex.lastIndex;
    return match;
}
export function xmlUnescape(value) {
    return value.replace(/&(amp|lt|gt|quot|apos|#39);/g, xmlUnescapeReplace);
}
function xmlUnescapeReplace(value, entity) {
    return XML_UNESCAPE[entity];
}
//# sourceMappingURL=util.js.map